name: Otomatik Bağımlılık Yönetimi ve Güvenlik Kontrolü

on:
  schedule:
    - cron: '0 * * * *'  # Her saat başı çalışır
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  dependency_management:
    runs-on: ubuntu-latest
    steps:
      - name: Klonlama
        uses: actions/checkout@v2

      - name: Node.js Bağımlılık Yönetimi
        run: |
          cd nodejs-app  # Node.js dizinine geçin (kendi yapınıza göre düzenleyin)
          npm install
          npm update

      - name: Python Bağımlılık Yönetimi
        run: |
          cd python-app  # Python dizinine geçin (kendi yapınıza göre düzenleyin)
          pip install -r requirements.txt
          pip install --upgrade -r requirements.txt

      - name: Ruby Bağımlılık Yönetimi
        run: |
          cd ruby-app  # Ruby dizinine geçin (kendi yapınıza göre düzenleyin)
          bundle install
          bundle update

      - name: PHP Bağımlılık Yönetimi
        run: |
          cd php-app  # PHP dizinine geçin (kendi yapınıza göre düzenleyin)
          composer install
          composer update

      - name: Java Bağımlılık Yönetimi
        run: |
          cd java-app  # Java dizinine geçin (kendi yapınıza göre düzenleyin)
          mvn install
          mvn versions:use-latest-releases

      - name: Go Bağımlılık Yönetimi
        run: |
          cd go-app  # Go dizinine geçin (kendi yapınıza göre düzenleyin)
          go mod tidy

      - name: .NET Bağımlılık Yönetimi
        run: |
          cd dotnet-app  # .NET dizinine geçin (kendi yapınıza göre düzenleyin)
          dotnet restore
          dotnet outdated

      - name: Zararlı Yazılım Algılama (Python)
        run: |
          pip install safety
          safety check  # Python bağımlılıklarını kontrol eder

      - name: Zararlı Yazılım Algılama (Node.js)
        run: |
          npm install --save-dev eslint
          npx eslint .  # Node.js kodunu kontrol eder

      - name: Zararlı Yazılım Algılama (Ruby)
        run: |
          gem install bundler-audit
          bundler-audit check  # Ruby bağımlılıklarını kontrol eder

      - name: Zararlı Yazılım Algılama (PHP)
        run: |
          composer require --dev roave/security-advisories
          composer audit  # PHP bağımlılıklarını kontrol eder

      - name: Commit değişiklikleri
        run: |
          git config --local user.email "your_email@example.com"  # Git kullanıcı e-posta adresiniz
          git config --local user.name "Your Name"  # Git kullanıcı adınız
          git add .  # Güncellenen dosyaları ekle
          git commit -m "Chore: Update dependencies" || echo "No changes to commit"  # Güncellemeleri commit et
          git push origin main  # Değişiklikleri ana branch'e it
